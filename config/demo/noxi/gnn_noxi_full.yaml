DATA:
  ROOT: "datasets"
  SESSION: "NOXI"
  SAMPLE_SIZE: 16
  # SAMPLING_NAME: "SMOTE"
  NOXI_IMG_DATA: "noxi_full/img"
  NOXI_AUD_DATA: "noxi_full/wav"
  NOXI_LABEL_DATA: "noxi_full/label/noxi_sessions_label.pkl"
DATA_LOADER:
  # NAME: "bimodal_resnet_lstm_data_loader_udiva" 
  NAME: "bimodal_resnet_lstm_data_loader_noxi"
  # TRANSFORM: "udiva_frame_transforms"
  TRANSFORM: "face_image_transform"
  # TRANSFORM: "face_image_x2_transform"
  TRAIN_BATCH_SIZE: 8
  VALID_BATCH_SIZE: 16
  TEST_BATCH_SIZE: 16
  NUM_WORKERS: 1
  DATASET_NAME: "NOXI"
  DROP_LAST: False
  PREFETCH_FACTOR: 1
  NUM_FOLD: 3
MODEL:
  # NAME: "resnet50_3d_model_udiva"  # UDIVA视觉: ResNet3D
  # NAME: "audio_resnet_udiva" # UDIVA音频分支: 纯ResNet模型结构
  # NAME: "audiovisual_resnet_lstm_udiva" # UDIVA音频+视觉: ResNet-LSTM模型结构：加入了LSTM层处理视觉分支的图片特征序列
  # NAME: "visual_graph_representation_learning"    # 视觉图表示学习
  NAME: "audio_graph_representation_learning"     # 音频图表示学习
  # NAME: "audiovisual_graph_representation_learning" # 视觉+音频融合 图表示学习
  NUM_CLASS: 4
  AU_CLASS: [12] # 列表结构，单模态时列表只有一个元素，多模态时有2个元素 [12]: 12个au图节点; [8]:8个au图节点; [15]: 取并集15个au图节点; [12,8]: audio 取12个au图节点, visual 取8个au图节点
  BACKBONE_INPUT: 'video' # frame:输入MEFARG backbone的数据是每一帧图像; video:输入MEFARG backbone的数据是每一段视频，即图像序列
  PREDICTION_FEAT: 'cl' # 预测时使用的特征 cl:使用MEFARG返回的cl; cl_edge:使用MEFARG返回的cl_edge; f_v:使用MEFARG返回的f_v; f_e:使用MEFARG返回的f_e
LOSS:
  NAME: "binary_cross_entropy"
SOLVER:
  NAME: "adam"
  SCHEDULER: "multi_step_scale"
  LR_INIT: 0.001
  WEIGHT_DECAY: 0.0005
  MOMENTUM: 0.9
  MILESTONE: [2, 5, 10, 20, 100, 200, 300, 400, 500, 540, 550, 560, 570, 580, 590]
TRAIN:
  TRAINER: "BiModalTrainerUdiva"
  MAX_EPOCH: 2
  SAVED_MODEL_DIR: "saved_model/deeppersonality/graph_visual"
  BIMODAL_OPTION: 2
  LOG_INTERVAL: 10
  VALID_INTERVAL: 1
  TEST_INTERVAL: 1
  ACC_THRESHOLD: 0.45
  # PRE_TRAINED_MODEL: "pre_trained_weights/ME-GraphAU/ME-GraphAU_swin_tiny_BP4D/MEFARG_swin_tiny_BP4D_fold1.pth;pre_trained_weights/ME-GraphAU/ME-GraphAU_resnet50_DISFA/MEFARG_resnet50_DISFA_fold1.pth"
  PRE_TRAINED_MODEL: "pre_trained_weights/ME-GraphAU/ME-GraphAU_resnet50_BP4D/MEFARG_resnet50_BP4D_fold1.pth;pre_trained_weights/ME-GraphAU/ME-GraphAU_resnet50_DISFA/MEFARG_resnet50_DISFA_fold1.pth"
  # PRE_TRAINED_MODEL: "pre_trained_weights/ME-GraphAU/ME-GraphAU_resnet101_BP4D/MEFARG_resnet101_BP4D_fold1.pth;pre_trained_weights/ME-GraphAU/ME-GraphAU_resnet50_DISFA/MEFARG_resnet50_DISFA_fold1.pth"
  USE_AMP: True
  USE_HALF: False
TEST:
  COMPUTE_PCC: False
  COMPUTE_CCC: False
